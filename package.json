{
  "name": "singprocess-server",
  "version": "1.0.0",
  "description": "Server for sing-process",
  "main": "server.js",
  "author": "Jack Lawrence-Jones <jackvlj@gmail.com>",
  "license": "MIT",
  "engines": {
    "yarn": "1.12.3"
  },
  "dependencies": {
    "babel-cli": "^6.26.0",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-preset-env": "^1.7.0",
    "babel-register": "^6.26.0",
    "body-parser": "^1.18.3",
    "cors": "^2.8.4",
    "express": "^4.16.3",
    "knex": "^0.16.3",
    "lodash": "^4.17.11",
    "moment": "^2.22.2",
    "pg": "^7.4.1"
  },
  "devDependencies": {
    "@babel/core": "^7.2.2",
    "@babel/node": "^7.2.2",
    "eslint": "^4.19.1",
    "eslint-config-airbnb": "^17.0.0",
    "eslint-plugin-import": "^2.12.0",
    "eslint-plugin-jsx-a11y": "^6.0.3",
    "eslint-plugin-react": "^7.9.1"
  },
  "scripts": {
    "clean": "rm -rf build && mkdir build",
    "build-babel": "babel -d ./build ./src -s",
    "//": "NB `-s` flag builds source-maps",
    "build": "yarn clean && yarn build-babel",
    "//": "build: deletes the contents of /build, then uses babel to transpile from /src -> /build",
    "start:prod": "node ./build/server.js",
    "//": "start:prod: this is called by heroku to start the server, as specified in the Procfile",
    "start:dev": "nodemon --exec babel-node src/server.js",
    "//": [
      "start:local: uses nodemon to reload the server automatically when changes to the code are",
      "detected. Runs the es6 code (not transpiled) using babel-node (instead of node)."
    ],
    "knex:build": "knex --knexfile=./build/knexfile.js",
    "knex:src": "babel-node node_modules/.bin/knex --knexfile=./src/knexfile.js",
    "//": [
      "knex:build and knex:src are two convenience scripts called by other scripts.",
      "Both specify the location of the relevant knexfile to run knex with.",
      "knex:build runs knex using the transpiled knexfile, in /build/db, whearas knex:src",
      "uses the es6 knexfile in /src/db, by running knex wit babel-node instead of node (as node ",
      "doesn't support es6).",
      "Using the knexfile in /src/db means the migration and seed files are created in the",
      "right places (in /src/db/...). If we just used the built knexfile, we would then have to move",
      "the created files from /build to the right dirs in /src.",
      "We only need to create migration files and seed files on local, but we need to run migrations and",
      "seed files on both local and prod. Prod doesn't have node-babel installed, so we need to use the",
      "transpiled knexfile. To keep local and prod iso, we use this method for migrations and seeding",
      "on local too. N.B. therefore before migrating or seeding locally, you must first do `yarn build`"
    ],
    "knex:seed:make": "yarn knex:src seed:make",
    "knex:migrate:make": "yarn knex:src migrate:make",
    "knex:seed:run": "yarn knex:build seed:run",
    "knex:migrate:latest": "yarn knex:build migrate:latest",
    "knex:migrate:rollback": "yarn knex:build migrate:rollback",
    "//": [
      "NB on local, before calling `knex:seed:run`, `knex:migrate:latest` or `knex:migrate:rollback`",
      "you must first do `yarn build`"
    ],
    "postinstall": "yarn build",
    "//": "postinstall is called after yarn install has finished, both on heroku and locally"
  }
}
